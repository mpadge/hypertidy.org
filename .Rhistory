#matrix(c(scale[1], 1, 1, scale[2]), 2) +
#matrix(c(shift[1], 0, 0, shift[2]), 2)
}
plot(w$geometry * affine() * res(b), asp = ""); axis(1); axis(2)
offset <- function(x, ...) {
c(xmin(x), ymin(x))
}
plot(w$geometry * affine() * res(b) + offset(b), asp = ""); axis(1); axis(2)
offset(b)
plot(w$geometry * affine() * 1/res(b) + offset(b), asp = ""); axis(1); axis(2)
plot(w$geometry * affine() * (1/res(b)) + offset(b), asp = ""); axis(1); axis(2)
plot(w$geometry * affine() * (res(b)) - offset(b), asp = ""); axis(1); axis(2)
plot(w$geometry * affine() - offset(b) * res(b), asp = ""); axis(1); axis(2)
w$geometry * affine()
1/res(b)
plot(w$geometry * affine() * res(b))
axis(1); axis(2)
offset(b) * res(b)
b
plot(w$geometry * affine() * 1/res(b)
)
plot(w$geometry * affine() * (1/res(b)))
axis(1); axis(2)
plot(w$geometry * affine() * 1/res(b) + offset(b) * (1/res(b)), asp = ""); axis(1); axis(2)
plot(w$geometry * affine() * (1/res(b)) + offset(b) * (1/res(b)), asp = ""); axis(1); axis(2)
plot(w$geometry * affine() * recip + offset(b) * recip, asp = ""); axis(1); axis(2)
recip <- 1/res(b)
plot(w$geometry * affine() * recip + offset(b) * recip, asp = ""); axis(1); axis(2)
offset(b) * recip
recip <- 1/res(b) * c(1, -1)
plot(w$geometry * affine() * recip + offset(b) * recip, asp = ""); axis(1); axis(2)
offset <- function(x, ...) {
c(xmin(x), ymax(x))
}
recip <- 1/res(b) * c(1, 1)
plot(w$geometry * affine() * recip + offset(b) * recip, asp = ""); axis(1); axis(2)
w$geometry + offset(b)
plot(w$geometry + offset(b))
offset(b)
axis(1)
plot(w$geometry - offset(b))
axis(1); axis(2)
plot(w$geometry - offset(b) * res(b))
axis(1); axis(2)
plot(w$geometry - offset(b) * recip)
axis(1); axis(2)
plot(w$geometry - xmin(b), asp = ""); axis(1); axis(2)
xmin(b)
xmin(b) - xmin(w)
library(spex)
xmin(b) - xmin(w)
xmin(b) - xmin(extent(w))
plot(w$geometry - (xmin(b) - xmin(extent(w))), asp = ""); axis(1); axis(2)
plot(w$geometry - (xmin(extent(w)) - xmin(b)), asp = ""); axis(1); axis(2)
plot(w$geometry - (xmin(b) - xmin(extent(w))), asp = ""); axis(1); axis(2)
plot(w$geometry - (xmin(extent(w)) - xmin(b)), asp = ""); axis(1); axis(2)
b
plot(w$geometry * (xmax(b) - xmin(b))/res(b)[1], asp = ""); axis(1); axis(2)
plot(w$geometry * ((xmax(b) - xmin(b))/res(b)[1]), asp = ""); axis(1); axis(2)
plot(w$geometry * ((xmax(b) - xmin(b))*res(b)[1]), asp = ""); axis(1); axis(2)
plot((w$geometry + 180) * ((xmax(b) - xmin(b))*res(b)[1]), asp = ""); axis(1); axis(2)
plot(w$geometry * 1 + c(180, 90), asp = ""); axis(1); axis(2)
?image_draw
image_draw(image_read("content/post/Rplot001.png"), xlim = c(xmin(b),xmax(b)), ylim = c(ymin(b), ymax(b)))
abline(h = -70)
plot(w$geometry, add = TRUE)
image_draw(image_read("content/post/Rplot001.png"), xlim = c(xmin(b),xmax(b)), ylim = c(ymin(b), ymax(b)))
plot(w$geometry, add = TRUE)
dev.off()
image_draw
b
image_read(b)
?image_read
as.raster(b)
?raster::as.array
}
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x), ylim = c(ymin(x), ymax(x))))
}
library(raadtools)
xf <- icefiles()
readice(xf$date[1], inputfiles = xf)
image_draw_raster(readice(xf$date[1], inputfiles = xf))
dev.off()
image_draw_raster(readice(xf$date[1], inputfiles = xf))
x <- readice(xf$date[1], inputfiles = xf)
x
a <- as.raster(as.matrix(x) / 100))
a <- as.raster(as.matrix(x) / 100)
dim(a)
x <- readice(xf$date[1], inputfiles = xf)[[1]]
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x), ylim = c(ymin(x), ymax(x))))
}
image_draw_raster(readice(xf$date[1], inputfiles = xf)[[1]])
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
}
image_draw_raster(readice(xf$date[1], inputfiles = xf)[[1]])
purrr::walk(xf$date, ~image_draw_raster(readice(.x, inputfiles = xf)[[1]])
)
image_draw_raster(readice(xf$date[1], inputfiles = xf)[[1]])
dev.off()
image_draw_raster(readice(xf$date[1], inputfiles = xf)[[1]])
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
}
purrr::walk(xf$date, ~image_draw_raster(readice(.x, inputfiles = xf)[[1]])
)
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
Sys.sleep(0.1)
}
purrr::walk(xf$date, ~image_draw_raster(readice(.x, inputfiles = xf)[[1]]))
for (i in 1:10) image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]]))
for (i in 1:10) image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
for (i in 1:10) {image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
}
for (i in 1:10) {print(image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]]))}
for (i in 1:10) {print(image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]]))}
image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0;i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- 0; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i
i
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
#Sys.sleep(0.1)
}
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
i <- i + 1; plot(readice(xf$date[i], inputfiles = xf)[[1]])
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
library(magick)
library(raadtools)
xf <-icefiles()
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
#Sys.sleep(0.1)
}
for (i in 1:10) {print(image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]]))}
for (i in 1:10) {image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])}
i <- 0;
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
dev.off()
i <- 0;
i <- i + 1; image_draw_raster(readice(xf$date[i], inputfiles = xf)[[1]])
dev.off()
i <- i + 1
image_draw(image_read(as.raster(as.matrix(readice(xf$date[i], inputfiles = xf)[[1]]) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
library(magick)
library(raadtools)
xf <-icefiles()
image_draw_raster <- function(x, ...) {
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
}
i <- 0;
i <- i + 1
i <- 0;
i <- i + 1
image_draw(image_read(as.raster(as.matrix(readice(xf$date[i], inputfiles = xf)[[1]]) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
i <- i + 1
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
for (i in seq_len(nrow(xf))) {
x <- readice(xf$date[i], inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
dev.off()
}
image_draw(image_read("content/post/Rplot001.png"), xlim = c(xmin(b),xmax(b)), ylim = c(ymin(b), ymax(b)))
# Combine images
logo <- image_read("https://www.r-project.org/logo/Rlogo.png")
oldlogo <- image_read("https://developer.r-project.org/Logo/Rlogo-3.png")
oldlogo
# Create morphing animation
both <- image_scale(c(oldlogo, logo), "400")
image_average(image_crop(both))
image_animate(image_morph(both, 10))
both
?image_append
l <- purrr::map(xf$date[1:100], function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x))
})
})
l <- purrr::map(xf$date[1:100], function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
})
l <- purrr::map(xf$date[1:100], function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_draw(image_read(as.raster(as.matrix(x) / 100)), xlim = c(xmin(x), xmax(x)), ylim = c(ymin(x), ymax(x)))
})
library(magick)
library(raadtools)
xf <-icefiles()
i <- 0;
l <- purrr::map(xf$date[1:100], function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100))
})
pryr::object_size(l)
do.call(c, l)
image_animate(do.call(c, l))
image_animate(l)
pryr::object_size(l)
pryr::object_size(readice())
pryr::object_size(l) * nrow(xf)/100
pryr::object_size(l) * nrow(xf)
library(magick)
library(raadtools)
xf <-icefiles()
l <- do.call(c, purrr::map(tail(xf$date, 720), function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100))
}))
pryr::object_size(l)
length(l)
image_animate(l)
d <- sp::spTransform(aceecostats::aes_region_simple, projection(readice()))
dummy <- readice(inputfiles = xf)
d <- sp::spTransform(aceecostats::aes_region_simple, projection(dummy))
image_draw(l[1], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, border = d$colour)
l2 <- vector("list", length(l))
i <- 1
image_draw(l[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, border = d$colour)
l2[i] <- image_capture()
l2[[i]] <- image_capture()
l2[[i]]
for (i in seq_along(l2)) {
image_draw(l[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, border = d$colour)
l2[[i]] <- image_capture()
dev.off()
}
RColorBrewer::brewer.pal()
?RColorBrewer::brewer.pal
d$color <- RColorBrewer::brewer.pal(nrow(d), type = "qual")
d$color <- RColorBrewer::brewer.pal(nrow(d), "Accent")
RColorBrewer::brewer.pal("Accent")
RColorBrewer::brewer.pal(name = "Accent")
dput(RColorBrewer::brewer.pal(name = "Accent"))
dput(RColorBrewer::brewer.pal(8, name = "Accent"))
library(magick)
library(raadtools)
xf <-icefiles()
images <- do.call(c, purrr::map(tail(xf$date, 36), function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100))
}))
images_map <- vector("list", length(images))
dummy <- readice(inputfiles = xf)
d <- orsifronts::orsifronts
d$color <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F",
"#BF5B17", "#666666")
d$color <- sample(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F",
"#BF5B17", "#666666"), nrow(d), replace = TRUE)
images_map <- vector("list", length(images))
dummy <- readice(inputfiles = xf)
d <- orsifronts::orsifronts
d$color <- sample(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F",
"#BF5B17", "#666666"), nrow(d), replace = TRUE)
for (i in seq_along(l2)) {
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col )
images_map[[i]] <- image_capture()
dev.off()
}
do.call(c, images_map)
d
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col )
library(sp)
plot(d, add = TRUE, col = d$color)
d <- sp::spTransform(orsifronts::orsifronts, projection(dummy))
plot(d, add = TRUE, col = d$color)
images_map <- vector("list", length(images))
dummy <- readice(inputfiles = xf)
d <- sp::spTransform(orsifronts::orsifronts, projection(dummy))
d$color <- sample(c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#386CB0", "#F0027F",
"#BF5B17", "#666666"), nrow(d), replace = TRUE)
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col = d$color)
d$color <- sample(rainbow(nrow(d)))
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col = d$color)
images_map[[i]] <- image_capture()
dev.off()
images_map <- vector("list", length(images))
dummy <- readice(inputfiles = xf)
d <- sp::spTransform(orsifronts::orsifronts, projection(dummy))
d$color <- sample(rainbow(nrow(d)))
for (i in seq_along(l2)) {
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col = d$color)
images_map[[i]] <- image_capture()
dev.off()
}
do.call(c, images_map)
image_animage(do.call(c, images_map))
image_animate(do.call(c, images_map))
library(magick)
library(raadtools)
xf <-icefiles()
images <- do.call(c, purrr::map(tail(xf$date, 36), function(date) {
x <- readice(date, inputfiles = xf)[[1]]
image_read(as.raster(as.matrix(x) / 100))
}))
images_map <- vector("list", length(images))
dummy <- readice(inputfiles = xf)
d <- sp::spTransform(orsifronts::orsifronts, projection(dummy))
d$color <- sample(rainbow(nrow(d)))
for (i in seq_along(l2)) {
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col = d$color)
images_map[[i]] <- image_capture()
dev.off()
}
image_animate(do.call(c, images_map))
for (i in seq_along(images_map)) {
image_draw(images[i], xlim = c(xmin(dummy), xmax(dummy)), ylim = c(ymin(dummy), ymax(dummy)))
plot(d, add = TRUE, col = d$color)
images_map[[i]] <- image_capture()
dev.off()
}
image_animate(do.call(c, images_map))
files <- raadfiles:::get_raw_raad_filenames()
dim(files)
library(dplyr)
filter(files, grepl("Artist", file))
filter(files, grepl("artist", file))
filter(files, grepl("Antarctic/asi-AMSR2-s6250", file))
raadfiles::amsr_daily_files
files <- raadfiles:::get_raw_raad_filenames() %>% filter(files, grepl("Antarctic/asi-AMSR2-s6250", file)) %>%
transmute(fullname = file.path(root))
files <- raadfiles:::get_raw_raad_filenames() %>% filter(grepl("Antarctic/asi-AMSR2-s6250", file)) %>%
transmute(fullname = file.path(root, file))
files
files <- raadfiles:::get_raw_raad_filenames() %>% filter(grepl("Antarctic/asi-AMSR2-s6250.*tif$", file)) %>%
transmute(fullname = file.path(root, file))
files
files <- raadfiles:::get_raw_raad_filenames() %>% filter(grepl("Antarctic/asi-AMSR2-s6250.*tif$", file)) %>%
transmute(fullname = file.path(root, file)) %>% mutate(date = strptime(basename(fullname), "asi-AMSR2-s6250-%Y%m%d"))
files <- raadfiles:::get_raw_raad_filenames() %>% filter(grepl("Antarctic/asi-AMSR2-s6250.*tif$", file)) %>%
transmute(fullname = file.path(root, file)) %>% mutate(date = as.POSIXct(strptime(basename(fullname), "asi-AMSR2-s6250-%Y%m%d"), tz = "GMT"))
files
image_read(files$fullname[1])
image_read_amsr <- function(x) {
image_read(as.matrix(raster::raster(x)))
}
image_read_amsr(files$fullname[1])
image_read_amsr <- function(x) {
image_read(as.matrix(raster::raster(x))/100)
}
image_read_amsr(files$fullname[1])
m <- as.matrix(raster::raster(files$fullname[1]))
dim(m)
range(m)
image_read_amsr <- function(x) {
m <- as.matrix(raster::raster(x))/100
m[m > 1] <- 0
image_read(as.raster(m))
}
image_read_amsr(files$fullname[1])
extent(dummy)
projection(dummy)
southpolar_extent <- extent(-3950000, 3950000, -3950000, 4350000)
southpolar_proj <-  "+proj=stere +lat_0=-90 +lat_ts=-70 +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378273 +b=6356889.449 +units=m +no_defs"
image_draw_amsr <- function(x, close = TRUE) {
image_draw(image_read_amsr(x))
if (close)  dev.off()
invisible(NULL)
}
library(dplyr)
files <- raadfiles:::get_raw_raad_filenames() %>% filter(grepl("Antarctic/asi-AMSR2-s6250.*tif$", file)) %>%
transmute(fullname = file.path(root, file)) %>% mutate(date = as.POSIXct(strptime(basename(fullname), "asi-AMSR2-s6250-%Y%m%d"), tz = "GMT"))
image_read_amsr <- function(x) {
m <- as.matrix(raster::raster(x))/100
m[m > 1] <- 0
image_read(as.raster(m))
}
sth_extent <- c(-3950000, 3950000, -3950000, 4350000)
sth_proj <-  "+proj=stere +lat_0=-90 +lat_ts=-70 +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378273 +b=6356889.449 +units=m +no_defs"
image_draw_amsr <- function(x, close = TRUE) {
image_draw(image_read_amsr(x), xlim = sth_extent[1:2], ylim = sth_extent[3:4])
if (close)  dev.off()
invisible(NULL)
}
image_draw_amsr(files$fullname[1])
image_draw_amsr(files$fullname[1])
data("wrld_simpl", package = "maptools")
mapdata <- sp::spTransform(wrld_simpl, sth_proj)
image_draw_amsr(files$fullname[1], close = FALSE)
plot(mapdata, add = TRUE)
dev.off()
image_draw_amsr(files$fullname[1], close = FALSE)
plot(mapdata, add = TRUE, border = "pink")
dev.off()
image_read_amsr <- function(x, fact = 5) {
x <- raster::raster(x)
if (fact > 1) x <- aggregate(x, fact = fact)
m <- as.matrix(x)/100
m[m > 1] <- 0
image_read(as.raster(m))
}
image_draw_amsr(files$fullname[1], close = FALSE)
plot(mapdata, add = TRUE, border = "pink")
dev.off()
image_read_amsr <- function(x, fact = 2) {
x <- raster::raster(x)
if (fact > 1) x <- aggregate(x, fact = fact)
m <- as.matrix(x)/100
m[m > 1] <- 0
image_read(as.raster(m))
}
image_draw_amsr(files$fullname[1], close = FALSE)
plot(mapdata, add = TRUE, border = "pink")
dev.off()
for (i in 1:100) {
image_draw_amsr(files$fullname[i], close = FALSE)
plot(mapdata, add = TRUE, border = "pink")
dev.off()
}
n <- 20
images_map <- vector("list", n)
for (i in seq_len(n)) {
image_draw_amsr(files$fullname[i], close = FALSE)
plot(mapdata, add = TRUE, border = "pink")
images_map[[i]] <- image_capture()
dev.off()
}
image_animate(do.call(c, images_map))
?image_write
image_write(do.call(c, images_map), "ice.gif")
image_write(image_animate(do.call(c, images_map)), "ice.gif")
